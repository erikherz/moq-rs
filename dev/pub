#!/bin/bash
set -euo pipefail

# Change directory to the root of the project
cd "$(dirname "$0")/.."

# Use debug logging by default
export RUST_LOG="${RUST_LOG:-debug}"

# Connect to localhost by default.
HOST="${HOST:-localhost}"
PORT="${PORT:-4443}"
ADDR="${ADDR:-$HOST:$PORT}"
SCHEME="${SCHEME:-https}"

# Generate a random 16 character name by default.
#NAME="${NAME:-$(head /dev/urandom | LC_ALL=C tr -dc 'a-zA-Z0-9' | head -c 16)}"

# JK use the name "bbb" instead, matching the Big Buck Bunny demo.
# TODO use that random name if the host is not localhost
NAME="${NAME:-bbb}"

# Combine the host into a URL.
URL="${URL:-"$SCHEME://$ADDR"}"

# Default to a source video
INPUT="${INPUT:-dev/source.mp4}"

# Make sure we build the library
cargo build -p moq-gst

# Print out the watch URL
echo "Watch URL: https://quic.video/watch/$NAME?server=$ADDR"

export GST_PLUGIN_PATH="${PWD}/target/debug${GST_PLUGIN_PATH:+:$GST_PLUGIN_PATH}"
#export GST_DEBUG=*:5

# Run gstreamer and pipe the output to moq-pub
#gst-launch-1.0 -v -e multifilesrc location="${INPUT}" loop=true ! qtdemux name=demux \
#    demux.video_0 ! h264parse ! queue ! identity sync=true ! mp4mux name=mux streamable=true fragment-duration=1 ! moqsink url="$URL" namespace="$NAME" \
#    demux.audio_0 ! aacparse ! queue ! mux.

gst-launch-1.0 -v -e multifilesrc location="${INPUT}" loop=true ! qtdemux name=demux \
    demux.video_0 ! h264parse ! queue ! identity sync=true ! isofmp4mux fragment-duration=1 ! moqsink name=sink url="$URL" namespace="$NAME" \
    demux.audio_0 ! aacparse ! queue ! isofmp4mux fragment-duration=1 ! sink.
